{"ast":null,"code":"import React from'react';import{useSelector}from'react-redux';import{useFirestoreConnect,isLoaded,isEmpty}from'react-redux-firebase';import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NoteDetail=function NoteDetail(props){var id=props.match.params.id;useFirestoreConnect([{collection:'notes',doc:id}]);var note=useSelector(function(_ref){var data=_ref.firestore.data;return data.notes&&data.notes[id];});var noteMarkup=!isLoaded(note)?/*#__PURE__*/_jsx(\"div\",{className:\"container section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card z-depth-0\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:/*#__PURE__*/_jsx(\"span\",{className:\"card-title\",children:\"Loading...\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-action grey lighten-4 grey-text\"})]})}):isEmpty(note)?/*#__PURE__*/_jsx(\"div\",{className:\"container section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card z-depth-0\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:/*#__PURE__*/_jsx(\"span\",{className:\"card-title\",children:\" The note content is Empty\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-action grey lighten-4 grey-text\"})]})}):/*#__PURE__*/_jsx(\"div\",{className:\"container section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card z-depth-0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"card-title\",children:note.title}),/*#__PURE__*/_jsx(\"p\",{children:note.content})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-action grey lighten-4 grey-text\",children:/*#__PURE__*/_jsx(\"div\",{children:moment(note.createdAt.toDate()).calendar()})})]})});return noteMarkup;};export default NoteDetail;","map":{"version":3,"sources":["E:/evernote-clone_proj/src/components/notes/NoteDetail.js"],"names":["React","useSelector","useFirestoreConnect","isLoaded","isEmpty","moment","NoteDetail","props","id","match","params","collection","doc","note","data","firestore","notes","noteMarkup","title","content","createdAt","toDate","calendar"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,mBAAT,CAA6BC,QAA7B,CAAsCC,OAAtC,KAAqD,sBAArD,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC1B,GAAMC,CAAAA,EAAE,CAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B,CACAN,mBAAmB,CAAC,CAAC,CAACS,UAAU,CAAC,OAAZ,CAAoBC,GAAG,CAACJ,EAAxB,CAAD,CAAD,CAAnB,CACA,GAAMK,CAAAA,IAAI,CAAGZ,WAAW,CAAC,kBAAaa,CAAAA,IAAb,MAAEC,SAAF,CAAaD,IAAb,OAAuBA,CAAAA,IAAI,CAACE,KAAL,EAAcF,IAAI,CAACE,KAAL,CAAWR,EAAX,CAArC,EAAD,CAAxB,CACA,GAAMS,CAAAA,UAAU,CAAG,CAACd,QAAQ,CAACU,IAAD,CAAT,cACf,YAAK,SAAS,CAAC,mBAAf,uBACI,aAAK,SAAS,CAAC,gBAAf,wBACI,YAAK,SAAS,CAAC,cAAf,uBACI,aAAM,SAAS,CAAC,YAAhB,wBADJ,EADJ,cAKI,YAAK,SAAS,CAAC,sCAAf,EALJ,GADJ,EADe,CAYjBT,OAAO,CAACS,IAAD,CAAP,cACE,YAAK,SAAS,CAAC,mBAAf,uBACA,aAAK,SAAS,CAAC,gBAAf,wBACI,YAAK,SAAS,CAAC,cAAf,uBACI,aAAM,SAAS,CAAC,YAAhB,wCADJ,EADJ,cAKI,YAAK,SAAS,CAAC,sCAAf,EALJ,GADA,EADF,cAaF,YAAK,SAAS,CAAC,mBAAf,uBACI,aAAK,SAAS,CAAC,gBAAf,wBACI,aAAK,SAAS,CAAC,cAAf,wBACI,aAAM,SAAS,CAAC,YAAhB,UAA8BA,IAAI,CAACK,KAAnC,EADJ,cAEI,mBAAIL,IAAI,CAACM,OAAT,EAFJ,GADJ,cAKI,YAAK,SAAS,CAAC,sCAAf,uBACI,qBAAMd,MAAM,CAACQ,IAAI,CAACO,SAAL,CAAeC,MAAf,EAAD,CAAN,CAAgCC,QAAhC,EAAN,EADJ,EALJ,GADJ,EAzBA,CAqCA,MAAOL,CAAAA,UAAP,CACH,CA1CD,CA4CA,cAAeX,CAAAA,UAAf","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useFirestoreConnect,isLoaded,isEmpty } from 'react-redux-firebase'\r\nimport moment from 'moment'\r\n\r\nconst NoteDetail = (props) => {\r\n    const id = props.match.params.id\r\n    useFirestoreConnect([{collection:'notes',doc:id}]);\r\n    const note = useSelector(({firestore:{data}}) =>data.notes && data.notes[id] )\r\n    const noteMarkup = !isLoaded(note)?(\r\n        <div className=\"container section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Loading...</span>\r\n                   \r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    ):isEmpty(note)?(\r\n        <div className=\"container section\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\"> The note content is Empty</span>\r\n               \r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    ):( \r\n    <div className=\"container section\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">{note.title}</span>\r\n                <p>{note.content}</p>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n                <div>{moment(note.createdAt.toDate()).calendar()}</div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>)\r\n    return noteMarkup\r\n}\r\n\r\nexport default NoteDetail\r\n"]},"metadata":{},"sourceType":"module"}