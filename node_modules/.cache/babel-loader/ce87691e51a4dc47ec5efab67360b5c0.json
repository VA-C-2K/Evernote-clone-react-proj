{"ast":null,"code":"var _jsxFileName = \"E:\\\\evernote-clone_proj\\\\src\\\\components\\\\notes\\\\EditForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateNote } from '../../store/actions/noteAction';\nimport useInput from '../../customhook/useInput';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditForm = () => {\n  _s();\n\n  const note = useSelector(state => state.note);\n  console.log('edit form', note);\n  const [title, bindTitle, resetTitle] = useInput(note.title);\n  const [content, bindContent, resetContent] = useInput(note.content);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(updateNote({\n      id: note.id,\n      title,\n      content\n    }));\n    resetContent();\n    resetTitle();\n    history.push();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"grey-text text-darken-3\",\n        children: \" New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"note_title\",\n          type: \"text\",\n          className: \"validate\",\n          ...bindTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"note_title\",\n          children: \"Note title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"note_content\",\n          className: \"materialize-textarea\",\n          ...bindContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"note_content\",\n          children: \"Note Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn  green\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditForm, \"fpAuKZ5FaaFzynk+IwJaiHAb+b8=\", false, function () {\n  return [useSelector, useInput, useInput, useDispatch];\n});\n\n_c = EditForm;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["E:/evernote-clone_proj/src/components/notes/EditForm.js"],"names":["React","useDispatch","useSelector","updateNote","useInput","useHistory","EditForm","note","state","console","log","title","bindTitle","resetTitle","content","bindContent","resetContent","dispatch","handleSubmit","e","preventDefault","id","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,IAAI,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,IAAzB;AAEA,QAAM,CAACI,KAAD,EAAOC,SAAP,EAAkBC,UAAlB,IAAgCT,QAAQ,CAACG,IAAI,CAACI,KAAN,CAA9C;AACA,QAAM,CAACG,OAAD,EAASC,WAAT,EAAsBC,YAAtB,IAAsCZ,QAAQ,CAACG,IAAI,CAACO,OAAN,CAApD;AACA,QAAMG,QAAQ,GAAGhB,WAAW,EAA5B;;AACA,QAAMiB,YAAY,GAAIC,CAAD,IAAM;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAACd,UAAU,CAAC;AAACkB,MAAAA,EAAE,EAACd,IAAI,CAACc,EAAT;AAAYV,MAAAA,KAAZ;AAAkBG,MAAAA;AAAlB,KAAD,CAAX,CAAR;AACAE,IAAAA,YAAY;AACZH,IAAAA,UAAU;AACVS,IAAAA,OAAO,CAACC,IAAR;AACH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEL,YAAhB;AAA8B,MAAA,SAAS,EAAC,OAAxC;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGQ;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAO,UAAA,EAAE,EAAC,YAAV;AAAuB,UAAA,IAAI,EAAC,MAA5B;AAAmC,UAAA,SAAS,EAAC,UAA7C;AAAA,aAA4DN;AAA5D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR,eAOQ;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAU,UAAA,EAAE,EAAC,cAAb;AAA4B,UAAA,SAAS,EAAC,sBAAtC;AAAA,aAAiEG;AAAjE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPR,eAWQ;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAhCD;;GAAMT,Q;UACWJ,W,EAGyBE,Q,EACMA,Q,EAC3BH,W;;;KANfK,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { updateNote } from '../../store/actions/noteAction'\r\nimport useInput from '../../customhook/useInput'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst EditForm = () => {\r\n    const note = useSelector((state) => state.note)\r\n    console.log('edit form', note)\r\n    \r\n    const [title,bindTitle, resetTitle] = useInput(note.title);\r\n    const [content,bindContent, resetContent] = useInput(note.content);\r\n    const dispatch = useDispatch()\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(updateNote({id:note.id,title,content}))\r\n        resetContent()\r\n        resetTitle()\r\n        history.push()\r\n    }\r\n\r\n    return (\r\n        <div className='section'>\r\n            <form onSubmit={handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\"> New Note</h5>\r\n                \r\n                    <div className=\"input-field\">\r\n                        <input id=\"note_title\" type=\"text\" className=\"validate\" {...bindTitle}/>\r\n                        <label  htmlFor=\"note_title\">Note title</label>    \r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <textarea id=\"note_content\" className=\"materialize-textarea\" {...bindContent}></textarea>\r\n                        <label htmlFor=\"note_content\">Note Content</label>\r\n                    </div>\r\n                    <button className=\"btn  green\">Update</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditForm\r\n"]},"metadata":{},"sourceType":"module"}