{"ast":null,"code":"import _objectSpread from\"E:/evernote-clone_proj/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export var addNote=function addNote(note){return function(dispatch,getState,_ref){var getFirestore=_ref.getFirestore;var firestore=getFirestore();firestore.collection('notes').add(_objectSpread(_objectSpread({},note),{},{favorite:false,createdAt:new Date()})).then(function(){console.log(\"add the note sucessfully\");}).catch(function(err){console.log(err);});};};export var deleteNote=function deleteNote(note){return function(dispatch,getState,_ref2){var getFirestore=_ref2.getFirestore;var firestore=getFirestore();firestore.collection('notes').doc(note.id).delete().then(function(){console.log(\"delete the note sucessfully\");}).catch(function(err){console.log(err);});};};export var toggleFav=function toggleFav(note){return function(dispatch,getState,_ref3){var getFirestore=_ref3.getFirestore;var favstats=!note.favorite;var firestore=getFirestore();firestore.collection('notes').doc(note.id).update({favorite:favstats}).then(function(){console.log(\" toggle fav note sucessfully\");}).catch(function(err){console.log(err);});};};export var updateNote=function updateNote(note){return function(dispatch,getState,_ref4){var getFirestore=_ref4.getFirestore;var firestore=getFirestore();firestore.collection('notes').doc(note.id).update({title:note.title,content:note.content}).then(function(){console.log(\" toggle fav note sucessfully\");}).catch(function(err){console.log(err);});};};","map":{"version":3,"sources":["E:/evernote-clone_proj/src/store/actions/noteAction.js"],"names":["addNote","note","dispatch","getState","getFirestore","firestore","collection","add","favorite","createdAt","Date","then","console","log","catch","err","deleteNote","doc","id","delete","toggleFav","favstats","update","updateNote","title","content"],"mappings":"4IAAA,MAAO,IAAMA,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAS,CAC5B,MAAO,UAACC,QAAD,CAAUC,QAAV,MAAwC,IAAnBC,CAAAA,YAAmB,MAAnBA,YAAmB,CAC3C,GAAMC,CAAAA,SAAS,CAAGD,YAAY,EAA9B,CACAC,SAAS,CAACC,UAAV,CAAqB,OAArB,EACCC,GADD,gCAEON,IAFP,MAGIO,QAAQ,CAAC,KAHb,CAIIC,SAAS,CAAC,GAAIC,CAAAA,IAAJ,EAJd,IAMCC,IAND,CAMM,UAAK,CACPC,OAAO,CAACC,GAAR,CAAY,0BAAZ,EACH,CARD,EASCC,KATD,CASO,SAAAC,GAAG,CAAG,CACTH,OAAO,CAACC,GAAR,CAAYE,GAAZ,EACH,CAXD,EAYH,CAdD,CAeH,CAhBM,CAkBP,MAAO,IAAMC,CAAAA,UAAU,CAAI,QAAdA,CAAAA,UAAc,CAACf,IAAD,CAAS,CAChC,MAAO,UAACC,QAAD,CAAUC,QAAV,OAAwC,IAAnBC,CAAAA,YAAmB,OAAnBA,YAAmB,CAC3C,GAAMC,CAAAA,SAAS,CAAGD,YAAY,EAA9B,CACAC,SAAS,CAACC,UAAV,CAAqB,OAArB,EAA8BW,GAA9B,CAAkChB,IAAI,CAACiB,EAAvC,EAA2CC,MAA3C,GACCR,IADD,CACM,UAAK,CACPC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EACH,CAHD,EAICC,KAJD,CAIO,SAAAC,GAAG,CAAG,CACTH,OAAO,CAACC,GAAR,CAAYE,GAAZ,EACH,CAND,EAOH,CATD,CAUH,CAXM,CAaP,MAAO,IAAMK,CAAAA,SAAS,CAAI,QAAbA,CAAAA,SAAa,CAACnB,IAAD,CAAS,CAC/B,MAAO,UAACC,QAAD,CAAUC,QAAV,OAAwC,IAAnBC,CAAAA,YAAmB,OAAnBA,YAAmB,CAC3C,GAAMiB,CAAAA,QAAQ,CAAG,CAACpB,IAAI,CAACO,QAAvB,CACA,GAAMH,CAAAA,SAAS,CAAGD,YAAY,EAA9B,CACAC,SAAS,CAACC,UAAV,CAAqB,OAArB,EAA8BW,GAA9B,CAAkChB,IAAI,CAACiB,EAAvC,EAA2CI,MAA3C,CAAkD,CAC9Cd,QAAQ,CAAGa,QADmC,CAAlD,EAGCV,IAHD,CAGM,UAAK,CACPC,OAAO,CAACC,GAAR,CAAY,8BAAZ,EACH,CALD,EAMCC,KAND,CAMO,SAAAC,GAAG,CAAG,CACTH,OAAO,CAACC,GAAR,CAAYE,GAAZ,EACH,CARD,EASH,CAZD,CAaH,CAdM,CAeP,MAAO,IAAMQ,CAAAA,UAAU,CAAI,QAAdA,CAAAA,UAAc,CAACtB,IAAD,CAAS,CAChC,MAAO,UAACC,QAAD,CAAUC,QAAV,OAAwC,IAAnBC,CAAAA,YAAmB,OAAnBA,YAAmB,CAC3C,GAAMC,CAAAA,SAAS,CAAGD,YAAY,EAA9B,CACAC,SAAS,CAACC,UAAV,CAAqB,OAArB,EAA8BW,GAA9B,CAAkChB,IAAI,CAACiB,EAAvC,EAA2CI,MAA3C,CAAkD,CAC9CE,KAAK,CAACvB,IAAI,CAACuB,KADmC,CAE9CC,OAAO,CAACxB,IAAI,CAACwB,OAFiC,CAAlD,EAICd,IAJD,CAIM,UAAK,CACPC,OAAO,CAACC,GAAR,CAAY,8BAAZ,EACH,CAND,EAOCC,KAPD,CAOO,SAAAC,GAAG,CAAG,CACTH,OAAO,CAACC,GAAR,CAAYE,GAAZ,EACH,CATD,EAUH,CAZD,CAaH,CAdM","sourcesContent":["export const addNote = (note) =>{\r\n    return (dispatch,getState,{ getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        firestore.collection('notes')\r\n        .add({\r\n            ...note,\r\n            favorite:false,\r\n            createdAt:new Date(),\r\n        })\r\n        .then(() =>{\r\n            console.log(\"add the note sucessfully\")\r\n        })\r\n        .catch(err =>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteNote  = (note) =>{\r\n    return (dispatch,getState,{ getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        firestore.collection('notes').doc(note.id).delete()\r\n        .then(() =>{\r\n            console.log(\"delete the note sucessfully\")\r\n        })\r\n        .catch(err =>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\nexport const toggleFav  = (note) =>{\r\n    return (dispatch,getState,{ getFirestore }) => {\r\n        const favstats = !note.favorite\r\n        const firestore = getFirestore()\r\n        firestore.collection('notes').doc(note.id).update({\r\n            favorite : favstats\r\n        })\r\n        .then(() =>{\r\n            console.log(\" toggle fav note sucessfully\")\r\n        })\r\n        .catch(err =>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\nexport const updateNote  = (note) =>{\r\n    return (dispatch,getState,{ getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        firestore.collection('notes').doc(note.id).update({\r\n            title:note.title,\r\n            content:note.content\r\n        })\r\n        .then(() =>{\r\n            console.log(\" toggle fav note sucessfully\")\r\n        })\r\n        .catch(err =>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}